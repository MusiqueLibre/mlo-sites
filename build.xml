<?xml version="1.0" ?>
<project name="deployDogma" basedir="." default="main">
  <target name="main">
  <!--Get the proper config file for the building env with -Denv=local/prod-->
  <property file="../../phing_properties/build.${env}.properties" />
  <!-- Copy files and replace tokens with the proper value  -->
  <copy todir="${yii_folder}/protected/config/" overwrite="true">
    <fileset dir="${yii_folder}/protected/config_example">
        <include name="*.php" />
      </fileset>
      <filterchain>
        <replacetokens begintoken="@@" endtoken="@@">
          <token key="yiiDBName" value="${yii_db}" />
          <token key="yiiDBUser" value="${yii_db_user}" />
          <token key="yiiDBPass" value="${yii_db_pass}" />
          <token key="forumDBName" value="${forum_db}" />
          <token key="forumDBUser" value="${forum_db_user}" />
          <token key="forumDBPass" value="${forum_db_pass}" />
          <token key="blogDBName" value="${blog_db}" />
          <token key="blogDBUser" value="${blog_db_user}" />
          <token key="blogDBPass" value="${blog_db_pass}" />
        </replacetokens>
      </filterchain>
  </copy>
  <copy tofile="./wp-content/plugins/mlo_sso_authent/mlo_sso_config.php" file="./wp-content/plugins/mlo_sso_authent/mlo_sso_config-example.php"  overwrite="true">
      <filterchain>
        <replacetokens begintoken="@@" endtoken="@@">
          <token key="yiiDBName" value="${yii_db}" />
          <token key="yiiDBUser" value="${yii_db_user}" />
          <token key="yiiDBPass" value="${yii_db_pass}" />
        </replacetokens>
      </filterchain>
    </copy>
    <!--Remove Debug mode for prod-->
      <if>
        <equals arg1="${env}" arg2="local" />
      <then>
        <reflexive>
          <fileset dir="${yii_folder}">
                <include name="index.php" />
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="//" replace=""/>
                </replaceregexp>
            </filterchain>
        </reflexive>
      </then>
      <else>
        <reflexive>
          <fileset dir="${yii_folder}">
                <include name="index.php" />
            </fileset>
            <filterchain>
                <replaceregexp>
                  <regexp pattern="defined" replace="//defined"/>
                  <regexp pattern="////" replace="//"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <!-- replacing less by proper css files -->
        <reflexive>
          <fileset dir="${inc_folder}">
                <!-- all included static files list must end by *statics.php -->
                <include name="*statics.php" />
            </fileset>
            <filterchain>
                <replaceregexp>
                  <regexp pattern='include "less_proccess.php";' replace="//include the LESS JS processor here"/>
                  <regexp pattern=".less" replace=".css"/>
                  <regexp pattern="stylesheet/less" replace="stylesheet"/>
                  <!-- removing the less processer  script -->
                  <regexp pattern="user.mlo.loc" replace="${user_manager_url}"/>
                </replaceregexp>
            </filterchain>
        </reflexive>
        <!-- Replacing every occurence of mlo.loc and replacing it with the actual server name-->
        <reflexive>
          <fileset dir="${yii_folder}/protected/modules/user/controllers/">
                <include name="*.php" />
            </fileset>
            <filterchain>
              <replaceregexp>
                <regexp pattern="mlo.loc" replace="${main_url}"/>
              </replaceregexp>
            </filterchain>
        </reflexive>
        <exec command="lessc global.less global.css" dir="./global_statics/css" />
        <exec command="lessc global_wp.less global_wp.css" dir="./global_statics/css" />
        <echo message="Commiting changes made by phing before pushing" />
        <exec command="git add -A" dir="." />
        <exec command="git commit -m 'commit before ftp push'" dir="." />
        <echo message="pushing to ftp : git ftp push --user ${ftp_user} --passwd ${ftp_pass} ${ftp_host}${ftp_folder}"/>
        <exec command="git ftp push --user ${ftp_user} --passwd ${ftp_pass} ${ftp_host}${ftp_folder}" dir="." />
      </else>
      </if>   
  </target>

</project>
